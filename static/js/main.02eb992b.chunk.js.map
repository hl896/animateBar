{"version":3,"sources":["logo.svg","Bars/Bar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value_status1st","data","bars","value_status2nd","value_status3th","status1","status2","status3","texts","error","isLoaded","items","min_25","bind","assertThisInitialized","e","getvalues","inputEl","value","console","log","setState","prevState","btn1","prevalue","parseInt","btn2","btn3","btn4","_this2","buttons","react_default","a","createElement","rel","href","integrity","crossorigin","className","ProgressBar_default","animated","id","striped","variant","now","label","concat","Form","Group","controlId","Label","Control","as","onChange","onpick","ref","el","placeholder","componentClass","type","onClick","Component","App","isLoading","that","fetch","then","response","json","jsonStr","Bars_Bar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02eb992b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react';\nimport ReactDom from 'react-dom';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport './bar.css';\nimport {Form,FormGroup, FormControl} from 'react-bootstrap'\n\n\n\nclass Bar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            value_status1st:this.props.data.bars[0],\n            value_status2nd:this.props.data.bars[1],\n            value_status3th:this.props.data.bars[2],\n\n            status1:false,\n            status2:false,\n            status3:false,\n\n            texts:this.props.data,\n\n            error: null,\n            isLoaded: false,\n            items: []\n        }\n       this.min_25=this.min_25.bind(this);\n    }\n   \n    \n    onpick(e){\n        const getvalues = this.inputEl.value;\n        console.log('[Onpick:]'+getvalues);\n        if(getvalues==\"1\"){\n            \n            this.setState(prevState=>({ \n                status1:!prevState.status1,\n                status2:false,\n                status3:false   \n            }));\n            console.log('status1:'+this.state.status1);\n        }else if(getvalues==\"2\"){\n            this.setState(prevState=>({ \n                status2:!prevState.status2,\n                status1:false,\n                status3:false  \n            }));\n            console.log('status2:'+this.state.status2);\n                \n        }else if(getvalues==\"3\"){\n            this.setState(prevState=>({ \n                status3:!prevState.status3  ,\n                status1:false,\n                status2:false  \n            }));\n            console.log('status3:'+this.state.status3)\n        }\n        else{\n            this.setState(prevState=>({ \n                status3:false,\n                status1:false,\n                status2:false  \n            }));\n            console.log('default-status:'+getvalues);\n            \n        }   \n    }\n    \n    min_25(btn1){\n            if(this.state.status1==true){\n                if(this.state.value_status1st+btn1>=0&&this.state.value_status1st+btn1<150){\n                   \n                    this.setState(\n                    \n                        prevalue=>{return {value_status1st:(prevalue.value_status1st+btn1)}}\n                    );\n                    \n                    \n                    \n                }else if(parseInt(this.state.value_status1st)+parseInt(btn1)>=150){\n                    console.log('path1...')\n                    console.log('result paths1:'+parseInt(this.state.value_status1st)+parseInt(btn1))\n                    this.setState(prevalue=>{return {value_status1st:150}});\n                }\n                else{\n                    console.log('paths3...')\n                    console.log('result paths3:'+parseInt(this.state.value_status1st)+parseInt(btn1))\n                    this.setState(prevalue=>{return {value_status1st:0}});\n                }\n                    \n                \n                console.log(this.state.value_status1st)\n            }else if(this.state.status2==true){\n                if(this.state.value_status2nd+btn1>=0&&this.state.value_status2nd+btn1<150){\n                    this.setState(prevalue=>{return {value_status2nd:(prevalue.value_status2nd+btn1)}});\n                }else if(parseInt(this.state.value_status2nd)+parseInt(btn1)>=150){\n                    console.log('path2....')\n                    console.log('result paths2:'+parseInt(this.state.value_status2nd)+parseInt(btn1))\n                    \n                    this.setState(prevalue=>{return {value_status2nd:150}});\n                }\n                else{\n                    console.log('paths4...')\n                    console.log('result paths4:'+parseInt(this.state.value_status2nd)+parseInt(btn1))\n                    \n                    this.setState(prevalue=>{return {value_status2nd:0}});\n                }\n                    \n                \n                console.log(this.state.value_status2nd)\n            }else if(this.state.status3==true){\n                if(this.state.value_status3th+btn1>=0&&this.state.value_status3th+btn1<150){\n                    this.setState(prevalue=>{return {value_status3th:(prevalue.value_status3th+btn1)}});\n                }else if(this.state.value_status3th+btn1>=150){\n                    this.setState(prevalue=>{return {value_status3th:150}});\n                }\n                else{\n                    this.setState(prevalue=>{return {value_status3th:0}});\n                }\n\n               \n                    \n                \n                console.log(this.state.value_status3th)\n            }\n        \n    }\n\n   \n    render(){\n        const updatestyles={\n            width:this.state.value_status1st\n        }\n        let texts= this.state.texts;\n        let btn1, btn2, btn3,btn4 ='';\n        \n        // texts.map(text=>(\n        //     btn1 =text.buttons[0],\n        //     btn2 = text.buttons[1],\n        //     btn3 = text.buttons[2],\n        //     btn4 = text.buttons[3]\n        // ))\n\n        console.log('texts:'+texts);\n        btn1=texts.buttons[0];\n        console.log('btn1:'+btn1);\n        btn2=texts.buttons[1];\n        console.log('btn1:'+btn2);\n        btn3=texts.buttons[2];\n        console.log('btn1:'+btn3);\n        btn4=texts.buttons[3];\n        console.log('btn1:'+btn4);\n\n        \n        \n        // if(btn1<0){\n        //     btn1=(-btn1);\n        // }else if(btn1>=0){\n        //     btn1=btn1;\n        // }\n        // if(btn2<0){\n        //     btn2=(-btn2);\n        // }else if(btn2>=0){\n        //     btn2=btn2\n        // }\n        // if(btn3<0){\n        //     btn3=(-btn3);\n        // } else if(btn3>=0){\n        //     btn3=btn3;\n        // }\n        // if(btn4<0) {\n        //     btn4=(-btn4); \n        // }else if(btn4>=0){\n        //     btn4=btn4;\n        // }\n\n        return (\n            <div >\n                <link rel=\"stylesheet\" \n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" \n                integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" \n                crossorigin=\"anonymous\"/>\n                <div className='progress-bar'>\n                    \n                    <ProgressBar animated className='singleBar progressbar' id='first' striped variant=\"success\"  now={parseInt(this.state.value_status1st)} label={this.state.value_status1st+'%'}/> \n                    <ProgressBar animated className='singleBar progressbar' id='second' striped variant=\"warning\" now={this.state.value_status2nd} label={`${this.state.value_status2nd}%`}/>\n                    <ProgressBar animated className='singleBar progressbar' id='third' striped variant=\"info\" now={this.state.value_status3th} label={`${this.state.value_status3th}%`}/>\n                </div>\n                <Form>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Example select</Form.Label>\n                        <Form.Control as=\"select\"\n                            onChange={this.onpick.bind(this)}\n                            ref={el=>this.inputEl=el}\n                            placeholder=\"select\"\n                            componentClass=\"select\"\n                            >\n                        <option value=\"\">select</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        </Form.Control>\n                    </Form.Group>\n                    \n                    <button type='button' onClick={()=>this.min_25(btn1)}>{btn1}</button>\n                    <button type='button' onClick={()=>this.min_25(btn2)}>{btn2}</button>\n                    <button type='button' onClick={()=>this.min_25(btn3)}>{btn3}</button>\n                    <button type='button' onClick={()=>this.min_25(btn4)}>{btn4}</button>  \n                </Form>\n                \n            </div>\n            \n        );\n    }\n}\nexport default Bar;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Bar from './Bars/Bar';\nimport { parse } from 'url';\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state={\n      data:null,\n      isLoading:false\n    }\n  }\n  componentDidMount() {\n    const that = this;\n    fetch('https://pb-api.herokuapp.com/bars')\n    .then(response=>response.json()\n    )\n    .then(jsonStr=>{\n      that.setState({\n        data:jsonStr,\n        isLoading:true\n      });\n    });\n  }\n  render() {\n    const that = this;\n    if(!that.state.isLoading){\n      return(\n        <div>\n          isloading\n        </div>\n      );\n    }\n    else{\n      const texts = (that.state.data);\n      console.log('app text is:'+texts);\n      return (\n        <div className=\"App\">\n          <Bar \n              data={texts}\n              >\n          </Bar> \n          <p>{}</p>\n        </div>\n      );\n      }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-bootstrap';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}